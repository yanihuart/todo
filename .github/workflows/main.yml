name: Docker Images CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
     run:
      working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4
      - name: Building Frontend...
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Deploying Frontend...
        run: | 
         curl --request GET '${{ secrets.FRONTEND_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'

  build-backend:
    runs-on: ubuntu-latest
    defaults:
     run:
      working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Make executeable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        working-directory: ./backend
        run: ./gradlew build

  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    defaults:
     run:
      working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Make executeable
        run: chmod +x ./gradlew
      - name: Test with Gradle
        working-directory: ./backend
        run: ./gradlew test

  deploy-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    
    steps:
      - name: Deploying Backend...
        run: | 
         curl --request GET '${{ secrets.BACKEND_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'
